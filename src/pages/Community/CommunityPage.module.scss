@use "../../styles/variables" as *;
@use "../../styles/mixins" as *;
@use "sass:color";

.communityPageWrapper {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  background-color: #f9fafb;
  margin-top: 1.2rem;
}

/* Navbar positioning override */
.navbarContainer {
  position: sticky;
  top: 1.2rem;
  z-index: 100;
  width: 100%;
  display: flex;
  justify-content: center;
  margin-bottom: 2rem;

  // Make the navbar wrapper exactly 1200px
  > nav {
    width: 120rem; // Exactly 1200px
    border-radius: $border-radius-md;
    background-color: rgba($surface-color, 0.97);
    box-shadow: 0 0.4rem 1.2rem rgba(0, 0, 0, 0.15);
  }

  @include media-breakpoint-down(lg) {
    padding: 0 $space-3;

    > nav {
      width: 100%;
    }
  }
}

/* Header styling */
.communityHeader {
  background: linear-gradient(
    120deg,
    rgba($primary, 0.05) 0%,
    rgba($secondary, 0.07) 100%
  );
  padding: $space-8 0;
  margin-bottom: $space-6;
  position: relative;
  overflow: hidden;

  &::before {
    content: "";
    position: absolute;
    top: -50px;
    right: 10%;
    width: 300px;
    height: 300px;
    border-radius: 50%;
    background-color: rgba($primary, 0.06);
    z-index: 0;
  }

  &::after {
    content: "";
    position: absolute;
    bottom: -100px;
    left: 5%;
    width: 400px;
    height: 400px;
    border-radius: 50%;
    background-color: rgba($secondary, 0.06);
    z-index: 0;
  }

  // Additional decorative element for more modern look
  &::before,
  &::after {
    animation: pulse 15s infinite alternate ease-in-out;
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

.headerContent {
  position: relative;
  z-index: 1;
  text-align: center;

  h1 {
    font-size: 4.2rem;
    font-weight: 700;
    color: $text-color;
    margin-bottom: $space-2;

    @include media-breakpoint-down(md) {
      font-size: 3.2rem;
    }
  }

  p {
    font-size: 1.8rem;
    color: $neutral-dark;
    max-width: 600px;
    margin: 0 auto;

    @include media-breakpoint-down(md) {
      font-size: 1.6rem;
    }
  }
}

.communityMain {
  flex: 1;
  margin-bottom: $space-8;
}

/* Search and filter toolbar */
.communityToolbar {
  display: flex;
  align-items: center;
  gap: $space-4;
  margin-bottom: $space-5;
  position: relative;
  z-index: 10;

  @include media-breakpoint-down(md) {
    flex-direction: column;
    gap: $space-3;
  }
}

.searchWrapper {
  flex: 1;
  position: relative;

  @include media-breakpoint-down(md) {
    width: 100%;
  }
}

.searchIcon {
  position: absolute;
  left: $space-3;
  top: 50%;
  transform: translateY(-50%);
  color: $neutral-mid;
  font-size: 1.6rem;
}

.searchInput {
  width: 100%;
  padding: $space-3 $space-3 $space-3 $space-7;
  background-color: $surface-color;
  border: 1px solid $neutral-light;
  border-radius: $border-radius-md; // Changed from lg to md
  font-size: 1.6rem;
  transition: all 0.2s ease;

  &:focus {
    outline: none;
    border-color: $primary;
    box-shadow: 0 0 0 2px rgba($primary, 0.2);
  }

  &::placeholder {
    color: $neutral-mid;
  }
}

.filterToggle {
  @include media-breakpoint-down(md) {
    align-self: flex-end;
  }
}

.filterButton {
  display: flex;
  align-items: center;
  gap: $space-2;
  padding: $space-3 $space-4;
  background-color: $surface-color;
  border: 1px solid $neutral-light;
  border-radius: $border-radius-md; // Changed from lg to md
  color: $text-color;
  font-size: 1.6rem;
  font-weight: $font-weight-medium;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    background-color: $neutral-light;
  }

  svg {
    color: $primary;
    font-size: 1.4rem;
  }
}

/* Filters panel */
.filtersPanel {
  background-color: $surface-color;
  border-radius: $border-radius-md;
  padding: 0;
  margin-bottom: $space-5;
  max-height: 0;
  overflow: hidden;
  opacity: 0;
  transition: all 0.3s ease;
  @include shadow-md;

  &.open {
    padding: $space-4;
    max-height: 300px;
    opacity: 1;
  }
}

.filterSection {
  &:not(:last-child) {
    margin-bottom: $space-4;
    padding-bottom: $space-4;
    border-bottom: 1px solid $neutral-light;
  }

  h3 {
    font-size: 1.6rem;
    font-weight: $font-weight-medium;
    margin-bottom: $space-3;
    color: $text-color;
  }
}

.filterOptions {
  display: flex;
  flex-wrap: wrap;
  gap: $space-2;
}

.filterOption {
  padding: $space-2 $space-3;
  background-color: $neutral-light;
  border: none;
  border-radius: $border-radius-md; // Changed from lg to md
  font-size: 1.4rem;
  color: $neutral-dark;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    background-color: rgba($primary, 0.1);
  }

  &.active {
    background-color: $primary;
    color: white;
  }
}

/* Communities grid */
.communitiesGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  gap: $space-5;
  margin-bottom: $space-8;

  @include media-breakpoint-down(sm) {
    grid-template-columns: 1fr;
  }

  // Modern grid layout with featured items
  @include media-breakpoint-up(lg) {
    grid-template-columns: repeat(12, 1fr);
    grid-auto-rows: minmax(180px, auto);

    // First item spans more columns
    > div:first-child {
      grid-column: span 6;
      grid-row: span 2;

      .communityImage {
        height: 260px;
      }

      h2 {
        font-size: 2.4rem;
      }

      .description {
        font-size: 1.6rem;
        -webkit-line-clamp: 3;
      }
    }

    // Medium sized items
    > div:nth-child(2),
    > div:nth-child(5) {
      grid-column: span 6;

      .communityImage {
        height: 200px;
      }
    }

    // Regular items
    > div:not(:first-child):not(:nth-child(2)):not(:nth-child(5)) {
      grid-column: span 4;
    }
  }
}

.communityCard {
  background-color: $surface-color;
  border-radius: $border-radius-md;
  overflow: hidden;
  @include shadow-md;
  transition: all 0.3s ease;

  &:hover {
    transform: translateY(-5px);
    @include shadow-lg;

    .communityImage {
      transform: scale(1.05);
      transform-origin: center;
    }
  }
}

.communityImage {
  height: 180px;
  background-size: cover;
  background-position: center;
  position: relative;
  transition: all 0.5s ease;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  overflow: hidden;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0.05) 0%,
      rgba(0, 0, 0, 0.6) 100%
    );
    opacity: 0.8;
    transition: opacity 0.3s ease;
    z-index: 1;
  }
}

.imageTitle {
  position: relative;
  z-index: 2;
  color: white;
  font-size: 2rem;
  font-weight: $font-weight-semibold;
  padding: $space-3 $space-4;
  margin: 0;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);

  @include media-breakpoint-down(md) {
    display: none;
  }
}

.mobileTitleOnly {
  @include media-breakpoint-up(md) {
    display: none;
  }
}

.communityMeta {
  position: absolute;
  top: $space-3;
  right: $space-3;
  z-index: 2; // Ensure it appears above the gradient overlay
}

.activityBadge {
  display: inline-block;
  padding: $space-1 $space-2;
  background-color: rgba($surface-color, 0.9);
  border-radius: $border-radius-md; // Changed from lg to md
  font-size: 1.2rem;
  font-weight: $font-weight-medium;
  color: $primary;
  z-index: 2; // Ensure it appears above the gradient overlay
}

.communityContent {
  padding: $space-4;

  h2 {
    font-size: 2rem;
    margin-bottom: $space-2;
    color: $text-color;
    font-weight: $font-weight-semibold;
  }
}

.description {
  font-size: 1.5rem;
  color: $neutral-dark;
  margin-bottom: $space-4;
  line-height: 1.5;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.communityStats {
  display: flex;
  gap: $space-3;
  margin-bottom: $space-4;
  flex-wrap: wrap;
}

.statItem {
  display: flex;
  align-items: center;
  gap: $space-1;
  font-size: 1.3rem;
  color: $neutral-dark;

  svg {
    color: $secondary;
    font-size: 1.4rem;
  }
}

.communityTags {
  display: flex;
  flex-wrap: wrap;
  gap: $space-2;
  margin-bottom: $space-4;
}

.tag {
  padding: $space-1 $space-2;
  background-color: rgba($secondary, 0.1);
  color: $secondary;
  border-radius: $border-radius-md; // Changed from lg to md
  font-size: 1.2rem;
  font-weight: $font-weight-medium;
}

.cardActions {
  display: flex;
  align-items: center;
  gap: $space-2;
}

.joinButton {
  flex: 1;
  padding: $space-2 $space-3 !important;
  font-size: 1.5rem !important;
  border-radius: $border-radius-md !important; // Use medium border radius (which is 0.8rem in your variables)
}

.saveButton {
  width: 4rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: $neutral-light;
  border: none;
  border-radius: 50%;
  color: $neutral-dark;
  font-size: 1.6rem;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    background-color: rgba($primary, 0.1);
    color: $primary;
    transform: translateY(-2px);
  }

  &:active {
    transform: translateY(0);
  }
}

/* No results */
.noResults {
  text-align: center;
  padding: $space-8 $space-4;

  h2 {
    font-size: 2.4rem;
    margin-bottom: $space-2;
    color: $text-color;
  }

  p {
    font-size: 1.6rem;
    color: $neutral-dark;
    margin-bottom: $space-5;
  }

  .resetButton {
    margin: 0 auto;
  }
}

/* Create community section */
.createCommunityWrapper {
  background: linear-gradient(
    120deg,
    rgba($secondary, 0.05) 0%,
    rgba($primary, 0.07) 100%
  );
  border-radius: $border-radius-md;
  padding: $space-6;
  margin-top: $space-8;
  position: relative;
  overflow: hidden;
  @include shadow-md;

  &::before {
    content: "";
    position: absolute;
    bottom: -80px;
    right: -80px;
    width: 240px;
    height: 240px;
    border-radius: 50%;
    background-color: rgba($primary, 0.07);
    z-index: 0;
  }
}

.createCommunityContent {
  position: relative;
  z-index: 1;
  text-align: center;
  max-width: 600px;
  margin: 0 auto;

  h2 {
    font-size: 2.8rem;
    margin-bottom: $space-3;
    color: $text-color;

    @include media-breakpoint-down(md) {
      font-size: 2.4rem;
    }
  }

  p {
    font-size: 1.6rem;
    color: $neutral-dark;
    margin-bottom: $space-5;
  }

  .createButton {
    background-color: $secondary !important;

    &:hover {
      background-color: color.adjust($secondary, $lightness: -5%) !important;
    }
  }
}
